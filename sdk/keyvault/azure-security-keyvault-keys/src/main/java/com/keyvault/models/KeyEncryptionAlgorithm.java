// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.keyvault.models;

import com.azure.core.annotation.Generated;
import com.azure.core.util.ExpandableStringEnum;
import java.util.Collection;

/**
 * The encryption algorithm to use to protected the exported key material.
 */
public final class KeyEncryptionAlgorithm extends ExpandableStringEnum<KeyEncryptionAlgorithm> {
    /**
     * The CKM_RSA_AES_KEY_WRAP key wrap mechanism.
     */
    @Generated
    public static final KeyEncryptionAlgorithm CKM_RSA_AES_KEY_WRAP = fromString("CKM_RSA_AES_KEY_WRAP");

    /**
     * The RSA_AES_KEY_WRAP_256 key wrap mechanism.
     */
    @Generated
    public static final KeyEncryptionAlgorithm RSA_AES_KEY_WRAP_256 = fromString("RSA_AES_KEY_WRAP_256");

    /**
     * The RSA_AES_KEY_WRAP_384 key wrap mechanism.
     */
    @Generated
    public static final KeyEncryptionAlgorithm RSA_AES_KEY_WRAP_384 = fromString("RSA_AES_KEY_WRAP_384");

    /**
     * Creates a new instance of KeyEncryptionAlgorithm value.
     * 
     * @deprecated Use the {@link #fromString(String)} factory method.
     */
    @Generated
    @Deprecated
    public KeyEncryptionAlgorithm() {
    }

    /**
     * Creates or finds a KeyEncryptionAlgorithm from its string representation.
     * 
     * @param name a name to look for.
     * @return the corresponding KeyEncryptionAlgorithm.
     */
    @Generated
    public static KeyEncryptionAlgorithm fromString(String name) {
        return fromString(name, KeyEncryptionAlgorithm.class);
    }

    /**
     * Gets known KeyEncryptionAlgorithm values.
     * 
     * @return known KeyEncryptionAlgorithm values.
     */
    @Generated
    public static Collection<KeyEncryptionAlgorithm> values() {
        return values(KeyEncryptionAlgorithm.class);
    }
}
